// Code generated by MockGen. DO NOT EDIT.
// Source: I:\GoLand\stocks\internal\domain\rest.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	domain "stocks/internal/domain"

	guid "github.com/beevik/guid"
	gomock "github.com/golang/mock/gomock"
)

// MockRestRepository is a mock of RestRepository interface.
type MockRestRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRestRepositoryMockRecorder
}

// MockRestRepositoryMockRecorder is the mock recorder for MockRestRepository.
type MockRestRepositoryMockRecorder struct {
	mock *MockRestRepository
}

// NewMockRestRepository creates a new mock instance.
func NewMockRestRepository(ctrl *gomock.Controller) *MockRestRepository {
	mock := &MockRestRepository{ctrl: ctrl}
	mock.recorder = &MockRestRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRestRepository) EXPECT() *MockRestRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRestRepository) Get(ctx context.Context, filialID, warehouseID, productID guid.Guid) (*domain.Rest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, filialID, warehouseID, productID)
	ret0, _ := ret[0].(*domain.Rest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRestRepositoryMockRecorder) Get(ctx, filialID, warehouseID, productID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRestRepository)(nil).Get), ctx, filialID, warehouseID, productID)
}
